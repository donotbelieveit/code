// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: alimama.proto

#include "alimama.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_alimama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BlockData_alimama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_alimama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BlockInfo_alimama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_alimama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SliceInfo_alimama_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_alimama_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SliceRequest_alimama_2eproto;
namespace alimama {
namespace proto {
class SliceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SliceRequest> _instance;
} _SliceRequest_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Request> _instance;
} _Request_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Response> _instance;
} _Response_default_instance_;
class BlockInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BlockInfo> _instance;
} _BlockInfo_default_instance_;
class SliceInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SliceInfo> _instance;
} _SliceInfo_default_instance_;
class Slice2BlockRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Slice2BlockRequest> _instance;
} _Slice2BlockRequest_default_instance_;
class Slice2BlockResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Slice2BlockResponse> _instance;
} _Slice2BlockResponse_default_instance_;
class BlockDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BlockData> _instance;
} _BlockData_default_instance_;
class GetBlockDataRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBlockDataRequest> _instance;
} _GetBlockDataRequest_default_instance_;
class GetBlockDataResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetBlockDataResponse> _instance;
} _GetBlockDataResponse_default_instance_;
class SendCopyRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SendCopyRequest> _instance;
} _SendCopyRequest_default_instance_;
class SendCopyResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SendCopyResponse> _instance;
} _SendCopyResponse_default_instance_;
class LoadAndRemoveRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadAndRemoveRequest> _instance;
} _LoadAndRemoveRequest_default_instance_;
class LoadAndRemoveResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadAndRemoveResponse> _instance;
} _LoadAndRemoveResponse_default_instance_;
}  // namespace proto
}  // namespace alimama
static void InitDefaultsscc_info_BlockData_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_BlockData_default_instance_;
    new (ptr) ::alimama::proto::BlockData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::BlockData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BlockData_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BlockData_alimama_2eproto}, {}};

static void InitDefaultsscc_info_BlockInfo_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_BlockInfo_default_instance_;
    new (ptr) ::alimama::proto::BlockInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::BlockInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BlockInfo_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BlockInfo_alimama_2eproto}, {}};

static void InitDefaultsscc_info_GetBlockDataRequest_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_GetBlockDataRequest_default_instance_;
    new (ptr) ::alimama::proto::GetBlockDataRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::GetBlockDataRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetBlockDataRequest_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetBlockDataRequest_alimama_2eproto}, {
      &scc_info_BlockInfo_alimama_2eproto.base,}};

static void InitDefaultsscc_info_GetBlockDataResponse_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_GetBlockDataResponse_default_instance_;
    new (ptr) ::alimama::proto::GetBlockDataResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::GetBlockDataResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetBlockDataResponse_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetBlockDataResponse_alimama_2eproto}, {
      &scc_info_BlockData_alimama_2eproto.base,}};

static void InitDefaultsscc_info_LoadAndRemoveRequest_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_LoadAndRemoveRequest_default_instance_;
    new (ptr) ::alimama::proto::LoadAndRemoveRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::LoadAndRemoveRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LoadAndRemoveRequest_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LoadAndRemoveRequest_alimama_2eproto}, {
      &scc_info_SliceInfo_alimama_2eproto.base,}};

static void InitDefaultsscc_info_LoadAndRemoveResponse_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_LoadAndRemoveResponse_default_instance_;
    new (ptr) ::alimama::proto::LoadAndRemoveResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::LoadAndRemoveResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadAndRemoveResponse_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoadAndRemoveResponse_alimama_2eproto}, {}};

static void InitDefaultsscc_info_Request_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_Request_default_instance_;
    new (ptr) ::alimama::proto::Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Request_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Request_alimama_2eproto}, {
      &scc_info_SliceRequest_alimama_2eproto.base,}};

static void InitDefaultsscc_info_Response_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_Response_default_instance_;
    new (ptr) ::alimama::proto::Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::Response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Response_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Response_alimama_2eproto}, {}};

static void InitDefaultsscc_info_SendCopyRequest_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_SendCopyRequest_default_instance_;
    new (ptr) ::alimama::proto::SendCopyRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::SendCopyRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SendCopyRequest_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SendCopyRequest_alimama_2eproto}, {
      &scc_info_BlockData_alimama_2eproto.base,}};

static void InitDefaultsscc_info_SendCopyResponse_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_SendCopyResponse_default_instance_;
    new (ptr) ::alimama::proto::SendCopyResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::SendCopyResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SendCopyResponse_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SendCopyResponse_alimama_2eproto}, {}};

static void InitDefaultsscc_info_Slice2BlockRequest_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_Slice2BlockRequest_default_instance_;
    new (ptr) ::alimama::proto::Slice2BlockRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::Slice2BlockRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Slice2BlockRequest_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Slice2BlockRequest_alimama_2eproto}, {
      &scc_info_SliceInfo_alimama_2eproto.base,}};

static void InitDefaultsscc_info_Slice2BlockResponse_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_Slice2BlockResponse_default_instance_;
    new (ptr) ::alimama::proto::Slice2BlockResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::Slice2BlockResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Slice2BlockResponse_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Slice2BlockResponse_alimama_2eproto}, {}};

static void InitDefaultsscc_info_SliceInfo_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_SliceInfo_default_instance_;
    new (ptr) ::alimama::proto::SliceInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::SliceInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SliceInfo_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SliceInfo_alimama_2eproto}, {
      &scc_info_BlockInfo_alimama_2eproto.base,}};

static void InitDefaultsscc_info_SliceRequest_alimama_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alimama::proto::_SliceRequest_default_instance_;
    new (ptr) ::alimama::proto::SliceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alimama::proto::SliceRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SliceRequest_alimama_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SliceRequest_alimama_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_alimama_2eproto[14];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_alimama_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_alimama_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_alimama_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::SliceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::SliceRequest, slice_partition_),
  PROTOBUF_FIELD_OFFSET(::alimama::proto::SliceRequest, data_start_),
  PROTOBUF_FIELD_OFFSET(::alimama::proto::SliceRequest, data_len_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::Request, slice_request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::Response, status_),
  PROTOBUF_FIELD_OFFSET(::alimama::proto::Response, slice_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::BlockInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::BlockInfo, slice_partition_),
  PROTOBUF_FIELD_OFFSET(::alimama::proto::BlockInfo, index_),
  PROTOBUF_FIELD_OFFSET(::alimama::proto::BlockInfo, node_id1_),
  PROTOBUF_FIELD_OFFSET(::alimama::proto::BlockInfo, node_id2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::SliceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::SliceInfo, version_),
  PROTOBUF_FIELD_OFFSET(::alimama::proto::SliceInfo, slice_partition_),
  PROTOBUF_FIELD_OFFSET(::alimama::proto::SliceInfo, block_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::Slice2BlockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::Slice2BlockRequest, slice_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::Slice2BlockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::Slice2BlockResponse, ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::BlockData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::BlockData, slice_partition_),
  PROTOBUF_FIELD_OFFSET(::alimama::proto::BlockData, block_index_),
  PROTOBUF_FIELD_OFFSET(::alimama::proto::BlockData, node1_),
  PROTOBUF_FIELD_OFFSET(::alimama::proto::BlockData, node2_),
  PROTOBUF_FIELD_OFFSET(::alimama::proto::BlockData, data_),
  PROTOBUF_FIELD_OFFSET(::alimama::proto::BlockData, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::GetBlockDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::GetBlockDataRequest, block_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::GetBlockDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::GetBlockDataResponse, block_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::SendCopyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::SendCopyRequest, block_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::SendCopyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::SendCopyResponse, ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::LoadAndRemoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::LoadAndRemoveRequest, slice_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::LoadAndRemoveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alimama::proto::LoadAndRemoveResponse, ok_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::alimama::proto::SliceRequest)},
  { 8, -1, sizeof(::alimama::proto::Request)},
  { 14, -1, sizeof(::alimama::proto::Response)},
  { 21, -1, sizeof(::alimama::proto::BlockInfo)},
  { 30, -1, sizeof(::alimama::proto::SliceInfo)},
  { 38, -1, sizeof(::alimama::proto::Slice2BlockRequest)},
  { 44, -1, sizeof(::alimama::proto::Slice2BlockResponse)},
  { 50, -1, sizeof(::alimama::proto::BlockData)},
  { 61, -1, sizeof(::alimama::proto::GetBlockDataRequest)},
  { 67, -1, sizeof(::alimama::proto::GetBlockDataResponse)},
  { 73, -1, sizeof(::alimama::proto::SendCopyRequest)},
  { 79, -1, sizeof(::alimama::proto::SendCopyResponse)},
  { 85, -1, sizeof(::alimama::proto::LoadAndRemoveRequest)},
  { 91, -1, sizeof(::alimama::proto::LoadAndRemoveResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_SliceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_BlockInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_SliceInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_Slice2BlockRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_Slice2BlockResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_BlockData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_GetBlockDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_GetBlockDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_SendCopyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_SendCopyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_LoadAndRemoveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alimama::proto::_LoadAndRemoveResponse_default_instance_),
};

const char descriptor_table_protodef_alimama_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\ralimama.proto\022\ralimama.proto\"M\n\014SliceR"
  "equest\022\027\n\017slice_partition\030\001 \001(\004\022\022\n\ndata_"
  "start\030\002 \001(\004\022\020\n\010data_len\030\003 \001(\004\"=\n\007Request"
  "\0222\n\rslice_request\030\001 \003(\0132\033.alimama.proto."
  "SliceRequest\".\n\010Response\022\016\n\006status\030\001 \001(\005"
  "\022\022\n\nslice_data\030\002 \003(\014\"W\n\tBlockInfo\022\027\n\017sli"
  "ce_partition\030\001 \001(\004\022\r\n\005index\030\002 \001(\004\022\020\n\010nod"
  "e_id1\030\003 \001(\r\022\020\n\010node_id2\030\004 \001(\r\"c\n\tSliceIn"
  "fo\022\017\n\007version\030\001 \001(\t\022\027\n\017slice_partition\030\002"
  " \001(\004\022,\n\nblock_info\030\003 \003(\0132\030.alimama.proto"
  ".BlockInfo\"B\n\022Slice2BlockRequest\022,\n\nslic"
  "e_info\030\001 \003(\0132\030.alimama.proto.SliceInfo\"!"
  "\n\023Slice2BlockResponse\022\n\n\002ok\030\001 \001(\010\"v\n\tBlo"
  "ckData\022\027\n\017slice_partition\030\001 \001(\004\022\023\n\013block"
  "_index\030\002 \001(\004\022\r\n\005node1\030\003 \001(\t\022\r\n\005node2\030\004 \001"
  "(\t\022\014\n\004data\030\005 \001(\014\022\017\n\007version\030\006 \001(\t\"C\n\023Get"
  "BlockDataRequest\022,\n\nblock_info\030\001 \003(\0132\030.a"
  "limama.proto.BlockInfo\"D\n\024GetBlockDataRe"
  "sponse\022,\n\nblock_data\030\001 \003(\0132\030.alimama.pro"
  "to.BlockData\"\?\n\017SendCopyRequest\022,\n\nblock"
  "_data\030\001 \001(\0132\030.alimama.proto.BlockData\"\036\n"
  "\020SendCopyResponse\022\n\n\002ok\030\001 \001(\010\"D\n\024LoadAnd"
  "RemoveRequest\022,\n\nslice_info\030\001 \003(\0132\030.alim"
  "ama.proto.SliceInfo\"#\n\025LoadAndRemoveResp"
  "onse\022\n\n\002ok\030\001 \001(\0102H\n\014ModelService\0228\n\003Get\022"
  "\026.alimama.proto.Request\032\027.alimama.proto."
  "Response\"\0002\315\003\n\013NodeService\022Y\n\014GetBlockDa"
  "ta\022\".alimama.proto.GetBlockDataRequest\032#"
  ".alimama.proto.GetBlockDataResponse\"\000\022M\n"
  "\010SendCopy\022\036.alimama.proto.SendCopyReques"
  "t\032\037.alimama.proto.SendCopyResponse\"\000\022]\n\016"
  "LoadAndRemove1\022#.alimama.proto.LoadAndRe"
  "moveRequest\032$.alimama.proto.LoadAndRemov"
  "eResponse\"\000\022]\n\016LoadAndRemove2\022#.alimama."
  "proto.LoadAndRemoveRequest\032$.alimama.pro"
  "to.LoadAndRemoveResponse\"\000\022V\n\013Slice2Bloc"
  "k\022!.alimama.proto.Slice2BlockRequest\032\".a"
  "limama.proto.Slice2BlockResponse\"\000b\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_alimama_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_alimama_2eproto_sccs[14] = {
  &scc_info_BlockData_alimama_2eproto.base,
  &scc_info_BlockInfo_alimama_2eproto.base,
  &scc_info_GetBlockDataRequest_alimama_2eproto.base,
  &scc_info_GetBlockDataResponse_alimama_2eproto.base,
  &scc_info_LoadAndRemoveRequest_alimama_2eproto.base,
  &scc_info_LoadAndRemoveResponse_alimama_2eproto.base,
  &scc_info_Request_alimama_2eproto.base,
  &scc_info_Response_alimama_2eproto.base,
  &scc_info_SendCopyRequest_alimama_2eproto.base,
  &scc_info_SendCopyResponse_alimama_2eproto.base,
  &scc_info_Slice2BlockRequest_alimama_2eproto.base,
  &scc_info_Slice2BlockResponse_alimama_2eproto.base,
  &scc_info_SliceInfo_alimama_2eproto.base,
  &scc_info_SliceRequest_alimama_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_alimama_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_alimama_2eproto = {
  false, false, descriptor_table_protodef_alimama_2eproto, "alimama.proto", 1522,
  &descriptor_table_alimama_2eproto_once, descriptor_table_alimama_2eproto_sccs, descriptor_table_alimama_2eproto_deps, 14, 0,
  schemas, file_default_instances, TableStruct_alimama_2eproto::offsets,
  file_level_metadata_alimama_2eproto, 14, file_level_enum_descriptors_alimama_2eproto, file_level_service_descriptors_alimama_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_alimama_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_alimama_2eproto)), true);
namespace alimama {
namespace proto {

// ===================================================================

void SliceRequest::InitAsDefaultInstance() {
}
class SliceRequest::_Internal {
 public:
};

SliceRequest::SliceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.SliceRequest)
}
SliceRequest::SliceRequest(const SliceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&slice_partition_, &from.slice_partition_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_len_) -
    reinterpret_cast<char*>(&slice_partition_)) + sizeof(data_len_));
  // @@protoc_insertion_point(copy_constructor:alimama.proto.SliceRequest)
}

void SliceRequest::SharedCtor() {
  ::memset(&slice_partition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_len_) -
      reinterpret_cast<char*>(&slice_partition_)) + sizeof(data_len_));
}

SliceRequest::~SliceRequest() {
  // @@protoc_insertion_point(destructor:alimama.proto.SliceRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SliceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SliceRequest::ArenaDtor(void* object) {
  SliceRequest* _this = reinterpret_cast< SliceRequest* >(object);
  (void)_this;
}
void SliceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SliceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SliceRequest& SliceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SliceRequest_alimama_2eproto.base);
  return *internal_default_instance();
}


void SliceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.SliceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&slice_partition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_len_) -
      reinterpret_cast<char*>(&slice_partition_)) + sizeof(data_len_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SliceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 slice_partition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          slice_partition_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 data_start = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          data_start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 data_len = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          data_len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SliceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.SliceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 slice_partition = 1;
  if (this->slice_partition() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_slice_partition(), target);
  }

  // uint64 data_start = 2;
  if (this->data_start() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_data_start(), target);
  }

  // uint64 data_len = 3;
  if (this->data_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_data_len(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.SliceRequest)
  return target;
}

size_t SliceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.SliceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 slice_partition = 1;
  if (this->slice_partition() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_slice_partition());
  }

  // uint64 data_start = 2;
  if (this->data_start() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_data_start());
  }

  // uint64 data_len = 3;
  if (this->data_len() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_data_len());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SliceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.SliceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SliceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SliceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.SliceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.SliceRequest)
    MergeFrom(*source);
  }
}

void SliceRequest::MergeFrom(const SliceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.SliceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.slice_partition() != 0) {
    _internal_set_slice_partition(from._internal_slice_partition());
  }
  if (from.data_start() != 0) {
    _internal_set_data_start(from._internal_data_start());
  }
  if (from.data_len() != 0) {
    _internal_set_data_len(from._internal_data_len());
  }
}

void SliceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.SliceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SliceRequest::CopyFrom(const SliceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.SliceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SliceRequest::IsInitialized() const {
  return true;
}

void SliceRequest::InternalSwap(SliceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SliceRequest, data_len_)
      + sizeof(SliceRequest::data_len_)
      - PROTOBUF_FIELD_OFFSET(SliceRequest, slice_partition_)>(
          reinterpret_cast<char*>(&slice_partition_),
          reinterpret_cast<char*>(&other->slice_partition_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SliceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Request::InitAsDefaultInstance() {
}
class Request::_Internal {
 public:
};

Request::Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  slice_request_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.Request)
}
Request::Request(const Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      slice_request_(from.slice_request_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:alimama.proto.Request)
}

void Request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Request_alimama_2eproto.base);
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:alimama.proto.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Request::ArenaDtor(void* object) {
  Request* _this = reinterpret_cast< Request* >(object);
  (void)_this;
}
void Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Request& Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Request_alimama_2eproto.base);
  return *internal_default_instance();
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slice_request_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .alimama.proto.SliceRequest slice_request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_slice_request(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .alimama.proto.SliceRequest slice_request = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_slice_request_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_slice_request(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .alimama.proto.SliceRequest slice_request = 1;
  total_size += 1UL * this->_internal_slice_request_size();
  for (const auto& msg : this->slice_request_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slice_request_.MergeFrom(from.slice_request_);
}

void Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::InternalSwap(Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  slice_request_.InternalSwap(&other->slice_request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Response::InitAsDefaultInstance() {
}
class Response::_Internal {
 public:
};

Response::Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  slice_data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.Response)
}
Response::Response(const Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      slice_data_(from.slice_data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:alimama.proto.Response)
}

void Response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Response_alimama_2eproto.base);
  status_ = 0;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:alimama.proto.Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Response::ArenaDtor(void* object) {
  Response* _this = reinterpret_cast< Response* >(object);
  (void)_this;
}
void Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Response& Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Response_alimama_2eproto.base);
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slice_data_.Clear();
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bytes slice_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_slice_data();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_status(), target);
  }

  // repeated bytes slice_data = 2;
  for (int i = 0, n = this->_internal_slice_data_size(); i < n; i++) {
    const auto& s = this->_internal_slice_data(i);
    target = stream->WriteBytes(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes slice_data = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(slice_data_.size());
  for (int i = 0, n = slice_data_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      slice_data_.Get(i));
  }

  // int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slice_data_.MergeFrom(from.slice_data_);
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::InternalSwap(Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  slice_data_.InternalSwap(&other->slice_data_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BlockInfo::InitAsDefaultInstance() {
}
class BlockInfo::_Internal {
 public:
};

BlockInfo::BlockInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.BlockInfo)
}
BlockInfo::BlockInfo(const BlockInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&slice_partition_, &from.slice_partition_,
    static_cast<size_t>(reinterpret_cast<char*>(&node_id2_) -
    reinterpret_cast<char*>(&slice_partition_)) + sizeof(node_id2_));
  // @@protoc_insertion_point(copy_constructor:alimama.proto.BlockInfo)
}

void BlockInfo::SharedCtor() {
  ::memset(&slice_partition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_id2_) -
      reinterpret_cast<char*>(&slice_partition_)) + sizeof(node_id2_));
}

BlockInfo::~BlockInfo() {
  // @@protoc_insertion_point(destructor:alimama.proto.BlockInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BlockInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BlockInfo::ArenaDtor(void* object) {
  BlockInfo* _this = reinterpret_cast< BlockInfo* >(object);
  (void)_this;
}
void BlockInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlockInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BlockInfo& BlockInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BlockInfo_alimama_2eproto.base);
  return *internal_default_instance();
}


void BlockInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.BlockInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&slice_partition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_id2_) -
      reinterpret_cast<char*>(&slice_partition_)) + sizeof(node_id2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 slice_partition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          slice_partition_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 node_id1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          node_id1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 node_id2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          node_id2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlockInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.BlockInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 slice_partition = 1;
  if (this->slice_partition() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_slice_partition(), target);
  }

  // uint64 index = 2;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_index(), target);
  }

  // uint32 node_id1 = 3;
  if (this->node_id1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_node_id1(), target);
  }

  // uint32 node_id2 = 4;
  if (this->node_id2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_node_id2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.BlockInfo)
  return target;
}

size_t BlockInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.BlockInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 slice_partition = 1;
  if (this->slice_partition() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_slice_partition());
  }

  // uint64 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_index());
  }

  // uint32 node_id1 = 3;
  if (this->node_id1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node_id1());
  }

  // uint32 node_id2 = 4;
  if (this->node_id2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node_id2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.BlockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BlockInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.BlockInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.BlockInfo)
    MergeFrom(*source);
  }
}

void BlockInfo::MergeFrom(const BlockInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.BlockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.slice_partition() != 0) {
    _internal_set_slice_partition(from._internal_slice_partition());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
  if (from.node_id1() != 0) {
    _internal_set_node_id1(from._internal_node_id1());
  }
  if (from.node_id2() != 0) {
    _internal_set_node_id2(from._internal_node_id2());
  }
}

void BlockInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.BlockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockInfo::CopyFrom(const BlockInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.BlockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockInfo::IsInitialized() const {
  return true;
}

void BlockInfo::InternalSwap(BlockInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlockInfo, node_id2_)
      + sizeof(BlockInfo::node_id2_)
      - PROTOBUF_FIELD_OFFSET(BlockInfo, slice_partition_)>(
          reinterpret_cast<char*>(&slice_partition_),
          reinterpret_cast<char*>(&other->slice_partition_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SliceInfo::InitAsDefaultInstance() {
}
class SliceInfo::_Internal {
 public:
};

SliceInfo::SliceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  block_info_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.SliceInfo)
}
SliceInfo::SliceInfo(const SliceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      block_info_(from.block_info_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  slice_partition_ = from.slice_partition_;
  // @@protoc_insertion_point(copy_constructor:alimama.proto.SliceInfo)
}

void SliceInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SliceInfo_alimama_2eproto.base);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  slice_partition_ = PROTOBUF_ULONGLONG(0);
}

SliceInfo::~SliceInfo() {
  // @@protoc_insertion_point(destructor:alimama.proto.SliceInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SliceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SliceInfo::ArenaDtor(void* object) {
  SliceInfo* _this = reinterpret_cast< SliceInfo* >(object);
  (void)_this;
}
void SliceInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SliceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SliceInfo& SliceInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SliceInfo_alimama_2eproto.base);
  return *internal_default_instance();
}


void SliceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.SliceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_info_.Clear();
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  slice_partition_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SliceInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "alimama.proto.SliceInfo.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 slice_partition = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          slice_partition_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .alimama.proto.BlockInfo block_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_block_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SliceInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.SliceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "alimama.proto.SliceInfo.version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_version(), target);
  }

  // uint64 slice_partition = 2;
  if (this->slice_partition() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_slice_partition(), target);
  }

  // repeated .alimama.proto.BlockInfo block_info = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_block_info_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_block_info(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.SliceInfo)
  return target;
}

size_t SliceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.SliceInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .alimama.proto.BlockInfo block_info = 3;
  total_size += 1UL * this->_internal_block_info_size();
  for (const auto& msg : this->block_info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // uint64 slice_partition = 2;
  if (this->slice_partition() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_slice_partition());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SliceInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.SliceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SliceInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SliceInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.SliceInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.SliceInfo)
    MergeFrom(*source);
  }
}

void SliceInfo::MergeFrom(const SliceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.SliceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  block_info_.MergeFrom(from.block_info_);
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.slice_partition() != 0) {
    _internal_set_slice_partition(from._internal_slice_partition());
  }
}

void SliceInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.SliceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SliceInfo::CopyFrom(const SliceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.SliceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SliceInfo::IsInitialized() const {
  return true;
}

void SliceInfo::InternalSwap(SliceInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  block_info_.InternalSwap(&other->block_info_);
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(slice_partition_, other->slice_partition_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SliceInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Slice2BlockRequest::InitAsDefaultInstance() {
}
class Slice2BlockRequest::_Internal {
 public:
};

Slice2BlockRequest::Slice2BlockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  slice_info_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.Slice2BlockRequest)
}
Slice2BlockRequest::Slice2BlockRequest(const Slice2BlockRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      slice_info_(from.slice_info_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:alimama.proto.Slice2BlockRequest)
}

void Slice2BlockRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Slice2BlockRequest_alimama_2eproto.base);
}

Slice2BlockRequest::~Slice2BlockRequest() {
  // @@protoc_insertion_point(destructor:alimama.proto.Slice2BlockRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Slice2BlockRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Slice2BlockRequest::ArenaDtor(void* object) {
  Slice2BlockRequest* _this = reinterpret_cast< Slice2BlockRequest* >(object);
  (void)_this;
}
void Slice2BlockRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Slice2BlockRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Slice2BlockRequest& Slice2BlockRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Slice2BlockRequest_alimama_2eproto.base);
  return *internal_default_instance();
}


void Slice2BlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.Slice2BlockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slice_info_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Slice2BlockRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .alimama.proto.SliceInfo slice_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_slice_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Slice2BlockRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.Slice2BlockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .alimama.proto.SliceInfo slice_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_slice_info_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_slice_info(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.Slice2BlockRequest)
  return target;
}

size_t Slice2BlockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.Slice2BlockRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .alimama.proto.SliceInfo slice_info = 1;
  total_size += 1UL * this->_internal_slice_info_size();
  for (const auto& msg : this->slice_info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Slice2BlockRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.Slice2BlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Slice2BlockRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Slice2BlockRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.Slice2BlockRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.Slice2BlockRequest)
    MergeFrom(*source);
  }
}

void Slice2BlockRequest::MergeFrom(const Slice2BlockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.Slice2BlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slice_info_.MergeFrom(from.slice_info_);
}

void Slice2BlockRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.Slice2BlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Slice2BlockRequest::CopyFrom(const Slice2BlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.Slice2BlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Slice2BlockRequest::IsInitialized() const {
  return true;
}

void Slice2BlockRequest::InternalSwap(Slice2BlockRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  slice_info_.InternalSwap(&other->slice_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Slice2BlockRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Slice2BlockResponse::InitAsDefaultInstance() {
}
class Slice2BlockResponse::_Internal {
 public:
};

Slice2BlockResponse::Slice2BlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.Slice2BlockResponse)
}
Slice2BlockResponse::Slice2BlockResponse(const Slice2BlockResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ok_ = from.ok_;
  // @@protoc_insertion_point(copy_constructor:alimama.proto.Slice2BlockResponse)
}

void Slice2BlockResponse::SharedCtor() {
  ok_ = false;
}

Slice2BlockResponse::~Slice2BlockResponse() {
  // @@protoc_insertion_point(destructor:alimama.proto.Slice2BlockResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Slice2BlockResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Slice2BlockResponse::ArenaDtor(void* object) {
  Slice2BlockResponse* _this = reinterpret_cast< Slice2BlockResponse* >(object);
  (void)_this;
}
void Slice2BlockResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Slice2BlockResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Slice2BlockResponse& Slice2BlockResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Slice2BlockResponse_alimama_2eproto.base);
  return *internal_default_instance();
}


void Slice2BlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.Slice2BlockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Slice2BlockResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Slice2BlockResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.Slice2BlockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.Slice2BlockResponse)
  return target;
}

size_t Slice2BlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.Slice2BlockResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->ok() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Slice2BlockResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.Slice2BlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Slice2BlockResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Slice2BlockResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.Slice2BlockResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.Slice2BlockResponse)
    MergeFrom(*source);
  }
}

void Slice2BlockResponse::MergeFrom(const Slice2BlockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.Slice2BlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ok() != 0) {
    _internal_set_ok(from._internal_ok());
  }
}

void Slice2BlockResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.Slice2BlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Slice2BlockResponse::CopyFrom(const Slice2BlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.Slice2BlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Slice2BlockResponse::IsInitialized() const {
  return true;
}

void Slice2BlockResponse::InternalSwap(Slice2BlockResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(ok_, other->ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Slice2BlockResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BlockData::InitAsDefaultInstance() {
}
class BlockData::_Internal {
 public:
};

BlockData::BlockData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.BlockData)
}
BlockData::BlockData(const BlockData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  node1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_node1().empty()) {
    node1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_node1(),
      GetArena());
  }
  node2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_node2().empty()) {
    node2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_node2(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  ::memcpy(&slice_partition_, &from.slice_partition_,
    static_cast<size_t>(reinterpret_cast<char*>(&block_index_) -
    reinterpret_cast<char*>(&slice_partition_)) + sizeof(block_index_));
  // @@protoc_insertion_point(copy_constructor:alimama.proto.BlockData)
}

void BlockData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BlockData_alimama_2eproto.base);
  node1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  node2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&slice_partition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&block_index_) -
      reinterpret_cast<char*>(&slice_partition_)) + sizeof(block_index_));
}

BlockData::~BlockData() {
  // @@protoc_insertion_point(destructor:alimama.proto.BlockData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BlockData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  node1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  node2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BlockData::ArenaDtor(void* object) {
  BlockData* _this = reinterpret_cast< BlockData* >(object);
  (void)_this;
}
void BlockData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlockData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BlockData& BlockData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BlockData_alimama_2eproto.base);
  return *internal_default_instance();
}


void BlockData::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.BlockData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node1_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  node2_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&slice_partition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&block_index_) -
      reinterpret_cast<char*>(&slice_partition_)) + sizeof(block_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 slice_partition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          slice_partition_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 block_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          block_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string node1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_node1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "alimama.proto.BlockData.node1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string node2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_node2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "alimama.proto.BlockData.node2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "alimama.proto.BlockData.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlockData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.BlockData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 slice_partition = 1;
  if (this->slice_partition() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_slice_partition(), target);
  }

  // uint64 block_index = 2;
  if (this->block_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_block_index(), target);
  }

  // string node1 = 3;
  if (this->node1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_node1().data(), static_cast<int>(this->_internal_node1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "alimama.proto.BlockData.node1");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_node1(), target);
  }

  // string node2 = 4;
  if (this->node2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_node2().data(), static_cast<int>(this->_internal_node2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "alimama.proto.BlockData.node2");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_node2(), target);
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_data(), target);
  }

  // string version = 6;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "alimama.proto.BlockData.version");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.BlockData)
  return target;
}

size_t BlockData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.BlockData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string node1 = 3;
  if (this->node1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_node1());
  }

  // string node2 = 4;
  if (this->node2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_node2());
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string version = 6;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // uint64 slice_partition = 1;
  if (this->slice_partition() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_slice_partition());
  }

  // uint64 block_index = 2;
  if (this->block_index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_block_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.BlockData)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BlockData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.BlockData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.BlockData)
    MergeFrom(*source);
  }
}

void BlockData::MergeFrom(const BlockData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.BlockData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node1().size() > 0) {
    _internal_set_node1(from._internal_node1());
  }
  if (from.node2().size() > 0) {
    _internal_set_node2(from._internal_node2());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.slice_partition() != 0) {
    _internal_set_slice_partition(from._internal_slice_partition());
  }
  if (from.block_index() != 0) {
    _internal_set_block_index(from._internal_block_index());
  }
}

void BlockData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.BlockData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockData::CopyFrom(const BlockData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.BlockData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockData::IsInitialized() const {
  return true;
}

void BlockData::InternalSwap(BlockData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  node1_.Swap(&other->node1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  node2_.Swap(&other->node2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlockData, block_index_)
      + sizeof(BlockData::block_index_)
      - PROTOBUF_FIELD_OFFSET(BlockData, slice_partition_)>(
          reinterpret_cast<char*>(&slice_partition_),
          reinterpret_cast<char*>(&other->slice_partition_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetBlockDataRequest::InitAsDefaultInstance() {
}
class GetBlockDataRequest::_Internal {
 public:
};

GetBlockDataRequest::GetBlockDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  block_info_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.GetBlockDataRequest)
}
GetBlockDataRequest::GetBlockDataRequest(const GetBlockDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      block_info_(from.block_info_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:alimama.proto.GetBlockDataRequest)
}

void GetBlockDataRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBlockDataRequest_alimama_2eproto.base);
}

GetBlockDataRequest::~GetBlockDataRequest() {
  // @@protoc_insertion_point(destructor:alimama.proto.GetBlockDataRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBlockDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetBlockDataRequest::ArenaDtor(void* object) {
  GetBlockDataRequest* _this = reinterpret_cast< GetBlockDataRequest* >(object);
  (void)_this;
}
void GetBlockDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBlockDataRequest& GetBlockDataRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBlockDataRequest_alimama_2eproto.base);
  return *internal_default_instance();
}


void GetBlockDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.GetBlockDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_info_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .alimama.proto.BlockInfo block_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_block_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBlockDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.GetBlockDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .alimama.proto.BlockInfo block_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_block_info_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_block_info(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.GetBlockDataRequest)
  return target;
}

size_t GetBlockDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.GetBlockDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .alimama.proto.BlockInfo block_info = 1;
  total_size += 1UL * this->_internal_block_info_size();
  for (const auto& msg : this->block_info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.GetBlockDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBlockDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.GetBlockDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.GetBlockDataRequest)
    MergeFrom(*source);
  }
}

void GetBlockDataRequest::MergeFrom(const GetBlockDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.GetBlockDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  block_info_.MergeFrom(from.block_info_);
}

void GetBlockDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.GetBlockDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockDataRequest::CopyFrom(const GetBlockDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.GetBlockDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockDataRequest::IsInitialized() const {
  return true;
}

void GetBlockDataRequest::InternalSwap(GetBlockDataRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  block_info_.InternalSwap(&other->block_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockDataRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetBlockDataResponse::InitAsDefaultInstance() {
}
class GetBlockDataResponse::_Internal {
 public:
};

GetBlockDataResponse::GetBlockDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  block_data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.GetBlockDataResponse)
}
GetBlockDataResponse::GetBlockDataResponse(const GetBlockDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      block_data_(from.block_data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:alimama.proto.GetBlockDataResponse)
}

void GetBlockDataResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetBlockDataResponse_alimama_2eproto.base);
}

GetBlockDataResponse::~GetBlockDataResponse() {
  // @@protoc_insertion_point(destructor:alimama.proto.GetBlockDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBlockDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetBlockDataResponse::ArenaDtor(void* object) {
  GetBlockDataResponse* _this = reinterpret_cast< GetBlockDataResponse* >(object);
  (void)_this;
}
void GetBlockDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetBlockDataResponse& GetBlockDataResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetBlockDataResponse_alimama_2eproto.base);
  return *internal_default_instance();
}


void GetBlockDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.GetBlockDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .alimama.proto.BlockData block_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_block_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBlockDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.GetBlockDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .alimama.proto.BlockData block_data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_block_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_block_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.GetBlockDataResponse)
  return target;
}

size_t GetBlockDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.GetBlockDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .alimama.proto.BlockData block_data = 1;
  total_size += 1UL * this->_internal_block_data_size();
  for (const auto& msg : this->block_data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.GetBlockDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBlockDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.GetBlockDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.GetBlockDataResponse)
    MergeFrom(*source);
  }
}

void GetBlockDataResponse::MergeFrom(const GetBlockDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.GetBlockDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  block_data_.MergeFrom(from.block_data_);
}

void GetBlockDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.GetBlockDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockDataResponse::CopyFrom(const GetBlockDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.GetBlockDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockDataResponse::IsInitialized() const {
  return true;
}

void GetBlockDataResponse::InternalSwap(GetBlockDataResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  block_data_.InternalSwap(&other->block_data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockDataResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SendCopyRequest::InitAsDefaultInstance() {
  ::alimama::proto::_SendCopyRequest_default_instance_._instance.get_mutable()->block_data_ = const_cast< ::alimama::proto::BlockData*>(
      ::alimama::proto::BlockData::internal_default_instance());
}
class SendCopyRequest::_Internal {
 public:
  static const ::alimama::proto::BlockData& block_data(const SendCopyRequest* msg);
};

const ::alimama::proto::BlockData&
SendCopyRequest::_Internal::block_data(const SendCopyRequest* msg) {
  return *msg->block_data_;
}
SendCopyRequest::SendCopyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.SendCopyRequest)
}
SendCopyRequest::SendCopyRequest(const SendCopyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_block_data()) {
    block_data_ = new ::alimama::proto::BlockData(*from.block_data_);
  } else {
    block_data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:alimama.proto.SendCopyRequest)
}

void SendCopyRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SendCopyRequest_alimama_2eproto.base);
  block_data_ = nullptr;
}

SendCopyRequest::~SendCopyRequest() {
  // @@protoc_insertion_point(destructor:alimama.proto.SendCopyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SendCopyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete block_data_;
}

void SendCopyRequest::ArenaDtor(void* object) {
  SendCopyRequest* _this = reinterpret_cast< SendCopyRequest* >(object);
  (void)_this;
}
void SendCopyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendCopyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendCopyRequest& SendCopyRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SendCopyRequest_alimama_2eproto.base);
  return *internal_default_instance();
}


void SendCopyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.SendCopyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && block_data_ != nullptr) {
    delete block_data_;
  }
  block_data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendCopyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .alimama.proto.BlockData block_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_block_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendCopyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.SendCopyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .alimama.proto.BlockData block_data = 1;
  if (this->has_block_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::block_data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.SendCopyRequest)
  return target;
}

size_t SendCopyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.SendCopyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .alimama.proto.BlockData block_data = 1;
  if (this->has_block_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *block_data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendCopyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.SendCopyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendCopyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SendCopyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.SendCopyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.SendCopyRequest)
    MergeFrom(*source);
  }
}

void SendCopyRequest::MergeFrom(const SendCopyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.SendCopyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_block_data()) {
    _internal_mutable_block_data()->::alimama::proto::BlockData::MergeFrom(from._internal_block_data());
  }
}

void SendCopyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.SendCopyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendCopyRequest::CopyFrom(const SendCopyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.SendCopyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendCopyRequest::IsInitialized() const {
  return true;
}

void SendCopyRequest::InternalSwap(SendCopyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(block_data_, other->block_data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendCopyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SendCopyResponse::InitAsDefaultInstance() {
}
class SendCopyResponse::_Internal {
 public:
};

SendCopyResponse::SendCopyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.SendCopyResponse)
}
SendCopyResponse::SendCopyResponse(const SendCopyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ok_ = from.ok_;
  // @@protoc_insertion_point(copy_constructor:alimama.proto.SendCopyResponse)
}

void SendCopyResponse::SharedCtor() {
  ok_ = false;
}

SendCopyResponse::~SendCopyResponse() {
  // @@protoc_insertion_point(destructor:alimama.proto.SendCopyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SendCopyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SendCopyResponse::ArenaDtor(void* object) {
  SendCopyResponse* _this = reinterpret_cast< SendCopyResponse* >(object);
  (void)_this;
}
void SendCopyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendCopyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendCopyResponse& SendCopyResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SendCopyResponse_alimama_2eproto.base);
  return *internal_default_instance();
}


void SendCopyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.SendCopyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendCopyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendCopyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.SendCopyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.SendCopyResponse)
  return target;
}

size_t SendCopyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.SendCopyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->ok() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendCopyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.SendCopyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendCopyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SendCopyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.SendCopyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.SendCopyResponse)
    MergeFrom(*source);
  }
}

void SendCopyResponse::MergeFrom(const SendCopyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.SendCopyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ok() != 0) {
    _internal_set_ok(from._internal_ok());
  }
}

void SendCopyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.SendCopyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendCopyResponse::CopyFrom(const SendCopyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.SendCopyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendCopyResponse::IsInitialized() const {
  return true;
}

void SendCopyResponse::InternalSwap(SendCopyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(ok_, other->ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendCopyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoadAndRemoveRequest::InitAsDefaultInstance() {
}
class LoadAndRemoveRequest::_Internal {
 public:
};

LoadAndRemoveRequest::LoadAndRemoveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  slice_info_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.LoadAndRemoveRequest)
}
LoadAndRemoveRequest::LoadAndRemoveRequest(const LoadAndRemoveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      slice_info_(from.slice_info_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:alimama.proto.LoadAndRemoveRequest)
}

void LoadAndRemoveRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoadAndRemoveRequest_alimama_2eproto.base);
}

LoadAndRemoveRequest::~LoadAndRemoveRequest() {
  // @@protoc_insertion_point(destructor:alimama.proto.LoadAndRemoveRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadAndRemoveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LoadAndRemoveRequest::ArenaDtor(void* object) {
  LoadAndRemoveRequest* _this = reinterpret_cast< LoadAndRemoveRequest* >(object);
  (void)_this;
}
void LoadAndRemoveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadAndRemoveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadAndRemoveRequest& LoadAndRemoveRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadAndRemoveRequest_alimama_2eproto.base);
  return *internal_default_instance();
}


void LoadAndRemoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.LoadAndRemoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slice_info_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadAndRemoveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .alimama.proto.SliceInfo slice_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_slice_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadAndRemoveRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.LoadAndRemoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .alimama.proto.SliceInfo slice_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_slice_info_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_slice_info(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.LoadAndRemoveRequest)
  return target;
}

size_t LoadAndRemoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.LoadAndRemoveRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .alimama.proto.SliceInfo slice_info = 1;
  total_size += 1UL * this->_internal_slice_info_size();
  for (const auto& msg : this->slice_info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadAndRemoveRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.LoadAndRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadAndRemoveRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadAndRemoveRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.LoadAndRemoveRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.LoadAndRemoveRequest)
    MergeFrom(*source);
  }
}

void LoadAndRemoveRequest::MergeFrom(const LoadAndRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.LoadAndRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slice_info_.MergeFrom(from.slice_info_);
}

void LoadAndRemoveRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.LoadAndRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadAndRemoveRequest::CopyFrom(const LoadAndRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.LoadAndRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadAndRemoveRequest::IsInitialized() const {
  return true;
}

void LoadAndRemoveRequest::InternalSwap(LoadAndRemoveRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  slice_info_.InternalSwap(&other->slice_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadAndRemoveRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoadAndRemoveResponse::InitAsDefaultInstance() {
}
class LoadAndRemoveResponse::_Internal {
 public:
};

LoadAndRemoveResponse::LoadAndRemoveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:alimama.proto.LoadAndRemoveResponse)
}
LoadAndRemoveResponse::LoadAndRemoveResponse(const LoadAndRemoveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ok_ = from.ok_;
  // @@protoc_insertion_point(copy_constructor:alimama.proto.LoadAndRemoveResponse)
}

void LoadAndRemoveResponse::SharedCtor() {
  ok_ = false;
}

LoadAndRemoveResponse::~LoadAndRemoveResponse() {
  // @@protoc_insertion_point(destructor:alimama.proto.LoadAndRemoveResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadAndRemoveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LoadAndRemoveResponse::ArenaDtor(void* object) {
  LoadAndRemoveResponse* _this = reinterpret_cast< LoadAndRemoveResponse* >(object);
  (void)_this;
}
void LoadAndRemoveResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadAndRemoveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadAndRemoveResponse& LoadAndRemoveResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadAndRemoveResponse_alimama_2eproto.base);
  return *internal_default_instance();
}


void LoadAndRemoveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:alimama.proto.LoadAndRemoveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadAndRemoveResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadAndRemoveResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alimama.proto.LoadAndRemoveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alimama.proto.LoadAndRemoveResponse)
  return target;
}

size_t LoadAndRemoveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alimama.proto.LoadAndRemoveResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->ok() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadAndRemoveResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alimama.proto.LoadAndRemoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadAndRemoveResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadAndRemoveResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alimama.proto.LoadAndRemoveResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alimama.proto.LoadAndRemoveResponse)
    MergeFrom(*source);
  }
}

void LoadAndRemoveResponse::MergeFrom(const LoadAndRemoveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alimama.proto.LoadAndRemoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ok() != 0) {
    _internal_set_ok(from._internal_ok());
  }
}

void LoadAndRemoveResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alimama.proto.LoadAndRemoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadAndRemoveResponse::CopyFrom(const LoadAndRemoveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alimama.proto.LoadAndRemoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadAndRemoveResponse::IsInitialized() const {
  return true;
}

void LoadAndRemoveResponse::InternalSwap(LoadAndRemoveResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(ok_, other->ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadAndRemoveResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace alimama
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::alimama::proto::SliceRequest* Arena::CreateMaybeMessage< ::alimama::proto::SliceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::SliceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::alimama::proto::Request* Arena::CreateMaybeMessage< ::alimama::proto::Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::Request >(arena);
}
template<> PROTOBUF_NOINLINE ::alimama::proto::Response* Arena::CreateMaybeMessage< ::alimama::proto::Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::Response >(arena);
}
template<> PROTOBUF_NOINLINE ::alimama::proto::BlockInfo* Arena::CreateMaybeMessage< ::alimama::proto::BlockInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::BlockInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::alimama::proto::SliceInfo* Arena::CreateMaybeMessage< ::alimama::proto::SliceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::SliceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::alimama::proto::Slice2BlockRequest* Arena::CreateMaybeMessage< ::alimama::proto::Slice2BlockRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::Slice2BlockRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::alimama::proto::Slice2BlockResponse* Arena::CreateMaybeMessage< ::alimama::proto::Slice2BlockResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::Slice2BlockResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::alimama::proto::BlockData* Arena::CreateMaybeMessage< ::alimama::proto::BlockData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::BlockData >(arena);
}
template<> PROTOBUF_NOINLINE ::alimama::proto::GetBlockDataRequest* Arena::CreateMaybeMessage< ::alimama::proto::GetBlockDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::GetBlockDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::alimama::proto::GetBlockDataResponse* Arena::CreateMaybeMessage< ::alimama::proto::GetBlockDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::GetBlockDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::alimama::proto::SendCopyRequest* Arena::CreateMaybeMessage< ::alimama::proto::SendCopyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::SendCopyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::alimama::proto::SendCopyResponse* Arena::CreateMaybeMessage< ::alimama::proto::SendCopyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::SendCopyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::alimama::proto::LoadAndRemoveRequest* Arena::CreateMaybeMessage< ::alimama::proto::LoadAndRemoveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::LoadAndRemoveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::alimama::proto::LoadAndRemoveResponse* Arena::CreateMaybeMessage< ::alimama::proto::LoadAndRemoveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::alimama::proto::LoadAndRemoveResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
